name: Build and Deploy to ECR

on:
  push:
    branches:
      - pre-release

jobs:
  build-app:
    runs-on: ubuntu-latest

    steps:
      - name: Validação de commits
        uses: webiny/action-conventional-commits@v1.3.0
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          allowed-commit-types: "feat,fix,chore" # Optional, set if you want a subset of commit types to be allowed.
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Semantic Release
        id: semantic   # Need an `id` for output variables
        uses: cycjimmy/semantic-release-action@v4
        with:
          dry_run: true
          branches: pre-release
          extra_plugins: |
            @semantic-release/changelog@6.0.0

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Do something when a new release published
        if: steps.semantic.outputs.new_release_published == 'true'
        run: |
            echo ${{ steps.semantic.outputs.new_release_version }}
            echo ${{ steps.semantic.outputs.new_release_major_version }}
            echo ${{ steps.semantic.outputs.new_release_minor_version }}
            echo ${{ steps.semantic.outputs.new_release_patch_version }}
#       - name: Set up JDK 17
#         uses: actions/setup-java@v3
#         with:
#           java-version: '17'
#           distribution: 'adopt'
#       - name: Cache Maven packages
#         uses: actions/cache@v3
#         with:
#           path: ~/.m2
#           key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
#           restore-keys: ${{ runner.os }}-m2
#       - name: Build and analyze
#         run: mvn clean package
      
#       - name: Upload JAR
#         uses: actions/upload-artifact@v2
#         with:
#           name: app-jar
#           path: target/demo.jar

#   image-build-and-deploy:
#     runs-on: ubuntu-latest
#     permissions:
#       id-token: write
#       contents: read
#     needs: build-app
    
#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v3
#     - name:  Download Artifact
#       uses: actions/download-artifact@v2
#       with:
#         name: app-jar
#     - name: List files in the workspace
#       run: ls -la
#     - name: Configure AWS Credentials
#       uses: aws-actions/configure-aws-credentials@v4 # More information on this action can be found below in the 'AWS Credentials' section
#       with: 
#           role-to-assume: arn:aws:iam::612872581837:role/gh-actions-role
#           aws-region: sa-east-1
#     - name: Login to Amazon ECR
#       uses: aws-actions/amazon-ecr-login@v2
#     - name: Build and Push Docker image
#       run: |
#         aws ecr get-login-password | docker login --username AWS --password-stdin 612872581837.dkr.ecr.us-east-1.amazonaws.com
#         docker build -t 612872581837.dkr.ecr.us-east-1.amazonaws.com/sample-app:$GITHUB_SHA .
#         docker push 612872581837.dkr.ecr.us-east-1.amazonaws.com/sample-app:$GITHUB_SHA
#       env:
#         AWS_REGION: us-east-1
#         IMAGE_TAG: $GITHUB_SHA