name: Processo de validação de Feature Branch

on:
  push:
    branches:
      - feature/**

    
jobs:
  build-app:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Chafy Studio - App Java Maven
        id: app
        uses: ./.github/workflows/maven
        with:
          gh_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Open PR
        id: check-open-prs
        uses: actions/github-script@v7
        with:
            github-token: ${{ secrets.GITHUB_TOKEN }}
            # Usar Base como parametro calculado
            script: |
                
                // Valida se tem algum PR Aberto para a branch release/x.x.x
                const { data: pullRequests } = await github.rest.pulls.list({
                owner: context.repo.owner,
                repo: context.repo.repo,
                head: context.payload.ref,
                base: "main",
                state: 'open'
                });
                
                core.setOutput('open_prs', pullRequests.length > 0);

                
                let response = await github.rest.repos.getBranch({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    branch: "main"
                });
                console.log('SHA1 Main', response.data.commit.sha)  

                try {
                  const pr_response = await github.rest.pulls.create({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    title: `From: ${context.payload.ref} - version: ${{steps.app.outputs.version}}`,
                    head:  context.payload.ref,
                    base:  "main",
                    body: `Fill this with the description of the PR.`
                });
                } catch (error) {
                  console.info(error.status); 
                  if(error.status == 422 && error.response.data.message == 'Validation Failed') {
                    core.warning('Pull Request já existe')
                    console.info(error.response.data.errors);
                  } else {
                    console.info(error); 
                    core.setFailed(error.message);
                  }
                }



