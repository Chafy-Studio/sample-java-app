# TODO - Transformar em mÃ³dulo para ser reutilizado
name: Build and Deploy to ECR




on:
  workflow_dispatch:
    inputs:
      java_dist:
        description: 'Java distribution'
        required: true
        default: 'adopt'
      java_version:
        description: 'Java version'
        required: true
        default: '17'
      app_folder:
        description: 'App folder'
        required: true
        default: './app'
      app_name:
        description: 'App name'
        required: true
        default: 'demo'
      iam_role:
        description: 'IAM Role'
        required: true
        default: 'arn:aws:iam::612872581837:role/gh-actions-role'
      aws_region:
        description: 'AWS Region'
        required: true
        default: 'us-east-1'
      app_ecr_repository:
        description: 'ECR Repository'
        required: true
        default: '612872581837.dkr.ecr.us-east-1.amazonaws.com'
  push:
    branches:
      - main

      
jobs:
  build-app:
    runs-on: ubuntu-latest

    steps:
      - name: Commit lint
        uses: webiny/action-conventional-commits@v1.3.0
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          allowed-commit-types: "feat,fix,chore" # Optional, set if you want a subset of commit types to be allowed.
      - name: Semantic release
        id: semantic-release
        run: | 
            VERSION=$(npx semantic-release --dry-run | grep "There is no previous release, the next release version is" | awk '{print $NF}')
            echo "NEXT_RELEASE_VERSION=${VERSION}" >> $GITHUB_OUTPUT
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up JDK ${{ github.event.inputs.java_version }}
        uses: actions/setup-java@v3
        with:
          java-version: ${{ github.event.inputs.java_version }}
          distribution: ${{ github.event.inputs.java_dist }}
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build with Maven
        run: mvn -B package --file ${{github.event.inputs.app_folder}}/pom.xml
      - name: Teste Coverage
        run: ./app/mvnw test jacoco:report --file ${{github.event.inputs.app_folder}}/pom.xml
      - name: Upload coverage to Codecov (optional)
        uses: codecov/codecov-action@v3
        with:
          file: ${{github.event.inputs.app_folder}}/target/site/jacoco/jacoco.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: true
      
      - name: Upload JAR
        uses: actions/upload-artifact@v2
        with:
          name: app-jar
          path: ${{github.event.inputs.app_folder}}/target/${{github.event.inputs.app_name}}.jar

  image-build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    needs: build-app
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Download JAR
      uses: actions/download-artifact@v2
      with:
        name: app-jar
        path: target
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4 # More information on this action can be found below in the 'AWS Credentials' section
      with: 
          role-to-assume: ${{ github.event.inputs.iam_role }}
          aws-region: ${{ github.event.inputs.aws_region }}
    - name: Login to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v2
    - name: Build and Push Docker image
      run: |
        aws ecr get-login-password | docker login --username AWS --password-stdin ${{ github.event.inputs.app_ecr_repository }}
        docker build -t ${{github.event.inputs.app_ecr_repository}}:$GITHUB_SHA .
        docker push ${{github.event.inputs.app_ecr_repository}}/${{github.event.inputs.app_name}}:$GITHUB_SHA
        docker push ${{github.event.inputs.app_ecr_repository}}/${{github.event.inputs.app_name}}:${{steps.semantic-release.outputs.NEXT_RELEASE_VERSION}}
      env:
        AWS_REGION: us-east-1
        IMAGE_TAG: $GITHUB_SHA
    - name: ChangeLog and Tag
      id: close-release
      run: | 
        npx semantic-release --extends ./.releaserc.json